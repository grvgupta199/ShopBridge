@model ShopBridge.Model.Item


    <form enctype="multipart/form-data">
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "" })<span class="text-danger">*</span>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control required" } })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "" })<span class="text-danger">*</span>

                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control required" } })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "" })

            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })

        </div>
        <div class="form-group ">
            <label class="" for="fileUpload">Upload Image</label>

            <input type="file" name="Image" accept="image/*" class="form-control-file" id="fileUpload">

        </div>
   
        <div class="form-group">
            <input type="submit" value="Add Item" id="btnAddItem" class="btn btn-primary" />
        </div>

    </form>

    <script>


    $(function () {

        $("form").on("submit", function (e) {
            e.preventDefault();
            var isValid = true;
            $('.required').removeClass('is-invalid');
            $('.required').each(function () {
                if ($(this).val().length == 0) {
                    $(this).addClass('is-invalid');
                    isValid = false;
                    return false;
                }

            });
            if (!isValid)
                return false;
            var formData = new FormData($('form')[0]);

            $.ajax({
                url: '@Url.Action("AddItem","Item")',
                type: 'Post',
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (data) {
                    if (data='success') {
                        $("form")[0].reset();
                        GetList();
                    }
                    else {
                        alert('Something went wrong!')
                    }
                }
            });


        });


        $('#Price').keypress(function (evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            if (charCode != 46 && charCode > 31
                && (charCode < 48 || charCode > 57))
                return false;

            return true;
        });

        $('#fileUpload').change(function () {
            var ext = $('#fileUpload').val().split('.').pop().toLowerCase();
            if ($.inArray(ext, ['gif', 'png', 'jpg', 'jpeg']) == -1) {
                $('#fileUpload').val('');
                alert('Only image file allowed!')
               return false
            }

        });

    });
    </script>

